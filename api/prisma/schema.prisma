// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name     String       @unique
  email        String       @unique
  password     String       // Use a hashed password for security
  salt         String 
  contests     Contest[]    @relation("UserContests")
  submissions  Submission[]
  leaderboards Leaderboard[] // Added for the relation with Leaderboard
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Problem{
  id String @id @default(uuid())
  title String
  description String
  difficulty Dificulty @relation("ProblemDificulty",fields:[dificultyId],references:[id])
  dificultyId String
  tags Tag[] @relation("ProblemTags")
  testCases   TestCase[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Dificulty{
  id String @id @default(uuid())
  level String @unique
  problems Problem[] @relation("ProblemDificulty")
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  problems Problem[] @relation("ProblemTags")
}

model TestCase{
  id String @id @default(uuid())
  input String
  output String
  isSample   Boolean  @default(false)
  problem Problem  @relation(fields: [problemId], references: [id])
  problemId String
}